<?phpclass call_backController extends Controller {    private function _addFilter($string) {        $registry = Registry::getInstance();        $return = true;        $string = mb_strtolower($string);//        if (mb_strpos($string, 'izo.ru') !== false) { //Если в комменте присутствует ссылка на сайт vbbook, то норм//        } elseif (mb_strpos($string, 'http://') !== false) { //Если на стороний сайт//            $return = false;//        }        if (mb_strpos($string, '<a href') !== false) { //Если на стороний сайт            $return = false;        }        if (preg_match("/[А-Яа-я]+/", $string)) {                    } else            $return = false;        return $return;    }    private function _recaptcha($value) {        $google_url="https://www.google.com/recaptcha/api/siteverify";        $secret='6LcA2CAUAAAAAL5ewR0iCKkOgoz6lAWQaM4nJoms';        $ip=$_SERVER['REMOTE_ADDR'];        $curl = curl_init($google_url);        curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, true);        curl_setopt($curl, CURLOPT_POST, true);        curl_setopt($curl, CURLOPT_HTTPHEADER, array('Content-Type: application/x-www-form-urlencoded'));        curl_setopt($curl, CURLOPT_POSTFIELDS, 'secret='.$secret.'&response='.$value.'&remoteip='.$ip);        curl_setopt($curl, CURLINFO_HEADER_OUT, false);        curl_setopt($curl, CURLOPT_HEADER, false);        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);        $curlData = curl_exec($curl);        curl_close($curl);          $res = json_decode($curlData, true);        if($res['success']) {            return TRUE;        }        return FALSE;    }    public function call_back_callAction() {        Lavra_Loader::LoadClass("Application");        Lavra_Loader::LoadModels('Setting', 'setting');        $setting = new Setting();        $set = $setting->getGeneral();        if (isset($_POST['call'])) {            $post = $_POST;            foreach ($_POST as $key => $value) {                $post[$key] = ($value);            }            $_POST = $post;            if (!empty($_POST['name'])) {                Lavra_Loader::LoadClass("SendMail");                $registry = Registry::getInstance();                $mail = new SendMail(); //Создаем класс Mail                $mail->isTypeHtml(true); //Ставим тип сообщения как обычный текст                $_POST['name'] = $this->name = ($_POST['name']);                $_POST['phone'] = $this->phone = ($_POST['phone']);                $this->mail_header = 'Перезвони мне!';                $this->mail_text = 'Вас просят перезвонить:';                $message = preg_replace(array('/\n/i', '/\r/i', '/\t/i', '/>\s+/i', '/\s+</i'), array('', '', '', '>', '<'), $this->fetchTemplate($registry->modules_dir . 'call_back/templates/mail_call_back.tpl'));                if (mb_strpos($registry->default_send_mail_adress, '@') !== false) {                    $from = $registry->default_send_mail_adress;                } else {                    $from = $set->email;                }                if ($mail->send(array($set->email, $set->email_2, $set->email_3), "Перезвони мне - " . $set->name, $message)) {                    $this->setMessage("В ближайшее время с Вами свяжется наш менеджер!");                    $this->is_send_ok = 1;                    $_POST = array();                } else {                    $this->setError("При отправке сообщения возникли пробелеммы");                }            } else {                $this->err_name = 1;            }        }    }    /**     * Оставить сообщение     */    public function call_backAction() {        Lavra_Loader::LoadClass("Application");        Lavra_Loader::LoadModels('Setting', 'setting');        $setting = new Setting();        $set = $setting->getGeneral();        $post = $_POST;        foreach ($_POST as $key => $value) {            $post[$key] = ($value);        }        $_POST = $post;        if (isset($_POST['call'])) {            if (!empty($_POST['name'])) {                if ($this->_addFilter($_POST['message'])) {                    if ($this->_recaptcha($_POST['g-recaptcha-response'])) {                        Lavra_Loader::LoadClass("SendMail");                        $registry = Registry::getInstance();                        $mail = new SendMail(); //Создаем класс Mail                        $_POST['name'] = $this->name = ($_POST['name']);                        $_POST['phone'] = $this->phone = ($_POST['phone']);                        $_POST['email'] = $this->email = ($_POST['email']);                        $_POST['message'] = $this->text = (nl2br(str_replace(' <', '&nbsp;<', $_POST['message'])));                        if (isset($_GET['is_update']) && $_GET['is_update'] == '1') {                            $this->mail_header = 'Предложение по улучшению магазина!';                            $this->mail_text = 'К вам пришло предложение по улучшению с сайта:';                        } else {                            $this->mail_header = 'Сообщение с сайта!';                            $this->mail_text = 'К вам пришло новое сообщение с сайта:';                        }                        $message = preg_replace(array('/\n/i', '/\r/i', '/\t/i', '/>\s+/i', '/\s+</i'), array('', '', '', '>', '<'), $this->fetchTemplate($registry->modules_dir . 'call_back/templates/mail_call_back.tpl'));                        if (mb_strpos($registry->default_send_mail_adress, '@') !== false) {                            $from = $registry->default_send_mail_adress;                        } else {                            $from = $set->email;                        }                        if ($mail->send(array('lsk_88@mail.ru'), "Сообщение с сайта - " . $set->name, $message)) {                            $this->setMessage("<h2 style='text-align:center;font-size:27px;padding-bottom:30px;padding-top:60px;'>Сообщение успешно отправлено!</h2><span style='font-size:20px;'>В ближайшее время оно будет рассмотрено.</span>");                            $this->is_send_ok = 1;                            $_POST = array();                        } else {                            $this->setError("При отправке сообщения возникли пробелеммы");                        }                    } else {                        $this->err_massage = 2;                    }                } else {                    $this->err_massage = 1;                }            } else {                $this->err_name = 1;            }        }    }    /**     * Обратная связь     */    public function callAction() {        Lavra_Loader::LoadModels('Setting', 'setting');        $setting = new Setting();        $set = $setting->getGeneral();        if (isset($_POST['call'])) {            if (!empty($_POST['phone'])) {                if ($_SESSION['code'] == $_POST['captcha']) {                    Lavra_Loader::LoadClass("SendMail");                    Lavra_Loader::LoadClass("Application");                    $registry = Registry::getInstance();                    $mail = new SendMail(); //Создаем класс Mail                    $mail->isTypeHtml(true); //Ставим тип сообщения как обычный текст                    $_POST['name'] = $this->name = ($_POST['name']);                    $_POST['phone'] = $this->phone = ($_POST['phone']);                    $this->mail_header = 'Перезвони мне!';                    $this->mail_text = 'Вас просят перезвонить:';                    $message = preg_replace(array('/\n/i', '/\r/i', '/\t/i', '/>\s+/i', '/\s+</i'), array('', '', '', '>', '<'), $this->fetchTemplate($registry->modules_dir . 'call_back/templates/mail_call_back.tpl'));                    if (mb_strpos($registry->default_send_mail_adress, '@') !== false) {                        $from = $registry->default_send_mail_adress;                    } else {                        $from = $set->email;                    }                    if ($mail->send(array($set->email, $set->email_2, $set->email_3), "Перезвони мне - " . $set->name, $message)) {                        $this->message_call = "<h2 style='text-align:center;font-size:27px;padding-bottom:30px;padding-top:60px;'>Запрос успешно отправлен!</h2><span style='font-size:20px;'>В ближайшее время с Вами свяжеться менеджер компани.</span>";                        $this->is_send_ok = 1;                        $_POST = array();                    } else {                        $this->setError("При отправке сообщения возникли пробелеммы");                    }                } else {                    $this->setError("Неверный код!");                }            } else {                $this->setError("Поля не заполнены или заполнены неправильно!");            }        }    }    public            function requestAction() {        Lavra_Loader::LoadModels("CallBack", 'call_back');        $request = new CallBack();        $start_date = getdate(time() - 86400);        $end_date = getdate();        if (!isset($_POST['start_month'])) {            $start_yaer = $start_date['year'];            $start_month = $start_date['mon'];            $start_day = $start_date['mday'];            $end_yaer = $end_date['year'];            $end_month = $end_date['mon'];            $end_day = $end_date['mday'];        } else {            $start_day = $_POST['start_day'];            $start_month = $_POST['start_month'];            $start_yaer = $_POST['start_year'];            $end_day = $_POST['end_day'];            $end_month = $_POST['end_month'];            $end_yaer = $_POST['end_year'];        }        if (isset($this->param['del_id'])) {            $request->del($this->param['del_id']);            $this->setMessage("Заявка успешно удалена!");        }        $this->form_start_date = Lavra_Loader::getLoadModule("application", "/application/date/1/$start_yaer/$start_month/$start_day/start_/0/");        $this->form_end_date = Lavra_Loader::getLoadModule("application", "/application/date/1/$end_yaer/$end_month/$end_day/end_/0/");        $this->requests = $request->getRequests(mktime(0, 0, 0, $start_month, $start_day, $start_yaer), mktime(23, 59, 59, $end_month, $end_day, $end_yaer));    }}